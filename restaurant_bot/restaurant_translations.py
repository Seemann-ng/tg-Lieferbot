from environs import Env

env = Env()
env.read_env()

BOT_NAME = env.str("BRAND_NAME")

texts = {
    "en_US": {
        "ASK_REGISTRATION_MSG": "This Telegram account isn't registered as a Restaurant account.\n"
                                "Please contact support for registration by replying to this message.\n"
                                "(By replying You agree Your contact info i.e. Telegram ID and Username "
                                "to be provided to Our Support Service.)",
        "WELCOME_MSG": f"Welcome to {BOT_NAME}-Restaurant!",
        "REG_REQUEST_MSG": lambda
            username,
            user_id,
            text: f"‚ùóÔ∏è Incoming restaurant registration request\n" \
                  f"from @{username} (`{user_id}`):\n" \
                  f"{text}",
        "REG_REQUEST_SENT_MSG": "Your request has been sent to Our Support Service.",
        "LANG_SEL_MENU": "Bot language selection menu.",
        "CHANGE_LANG_MSG": "Select bot language",
        "SEL_LANG_DE_BTN": "üá©üá™ German\n(Deutsch)",
        "SEL_LANG_EN_BTN": "üá∫üá∏ English",
        "SEL_LANG_RU_BTN": "üá∑üá∫ Russian\n(–†—É—Å—Å–∫–∏–π)",
        "LANG_SELECTED_MSG": "Language changed to English!",
        "OPEN_SHIFT_MSG": "Shift is opened, now You can receive orders.",
        "CLOSE_SHIFT_MSG": "Shift is closed.",
        "DISH_AVAILABLE_SELECT_MSG": "Choose item to make it available.",
        "DISH_SET_AVAILABLE_MSG": "Selected item has been set available.",
        "DISH_UNAVAILABLE_SELECT_MSG": "Choose item to make it unavailable.",
        "DISH_SET_UNAVAILABLE_MSG": "Selected item has been set unavailable.",
        "DELETE_DISH_SELECT_MSG": "Select item to delete.",
        "DISH_DELETED_MSG": "Selected item has been deleted.",
        "DISH_ADDED_MSG": lambda dish_name: f"‚úÖ Item: {dish_name} has been added to the Database.",
        "NO_DISH_NAME_MSG": "No item name was provided.",
        "EDIT_DISH_MSG": "Choose a item to edit",
        "GO_BACK_BTN": "‚¨ÖÔ∏è BACK",
        "EDIT_DISH_CHOSEN_MSG": lambda dish_name: f"Item to edit:\n{dish_name}",
        "EDIT_DISH_PARAM_MSG": "Which parameter of the item do You want to change?",
        "EDIT_DESC_BTN": "üìù Description",
        "EDIT_CAT_BTN": "üõç Category",
        "EDIT_PRICE_BTN": "üí∂ Price",
        "EDIT_CATEGORY_MSG": lambda
            dish_uuid: f"Enter new category for the item:\n" \
                       f"Item UUID: {dish_uuid}",
        "CAT_SET_MSG": "‚úÖ New category has been set for the item.",
        "EDIT_DESCRIPTION_MSG": lambda
            dish_uuid: f"Enter new description for the item:\n" \
                       f"Item UUID: {dish_uuid}",
        "DESC_SET_MSG": "‚úÖ New description has been set for the item.",
        "EDIT_PRICE_MSG": lambda
            dish_uuid: f"Enter new price for the item:\n" \
                       f"Item UUID: {dish_uuid}",
        "PRICE_SET_MSG": "‚úÖ New price has been set for the item.",
        "REST_ORDER_ACCEPTED_MSG": lambda order_uuid: f"‚úÖ Accepted order\n`{order_uuid}`",
        "CUST_ORDER_ACCEPTED_MSG": lambda
            order_uuid: f"Order\n`{order_uuid}`\n" \
                        f"Status update:\n" \
                        f"Order received by the restaurant, looking for a courier.",
        "LOOKING_FOR_COURIER_MSG": lambda
            order_uuid,
            courier_fee,
            customer_name,
            customer_username,
            customer_phone,
            comment,
            rest_name,
            dishes,
            rest_address: f"New incoming order:\n`{order_uuid}`\n" \
                          f"Courier pay:\n‚Ç¨`{courier_fee}`\n" \
                          f"Customer's name:\n{customer_name}\n" \
                          f"Customer's Telegram:\n @{customer_username}\n" \
                          f"Customer's phone:\n{customer_phone}\n" \
                          f"Order comments:\n{comment}\n" \
                          f"Restaurant:\n`{rest_name}`\n" \
                          f"Item(s):\n{dishes}\n" \
                          f"Restaurant address:\n`{rest_address}`\n" \
                          f"Restaurant location:",
        "COURIER_DELIVERY_LOC_MSG": "To be delivered here:",
        "COURIER_ACCEPT_ORDER_MSG": "Accept order?",
        "COURIER_ACCEPT_BTN": "‚úÖ Accept",
        "ORDER_READY_MSG": lambda order_uuid: f"Order\n`{order_uuid}`\nis ready and handled to the courier.",
        "COUR_ORDER_IN_DELIVERY_MSG": lambda
            order_uuid: f"Please confirm receiving order\n`{order_uuid}`\n" \
                        f"by pressing button below.",
        "CUST_ORDER_IN_DELIVERY_MSG": lambda
            order_uuid: f"Order\n`{order_uuid}`\n" \
                        f"Status update:\nOrder is ready and handled to the courier.",
        "COUR_ORDER_IN_DELIVERY_BTN": "‚úÖ Order received"
    },
    "de_DE": {
        "ASK_REGISTRATION_MSG": "This Telegram account isn't registered as a Restaurant account.\n"
                                "Please contact support for registration by replying to this message.\n"
                                "(By replying You agree Your contact info i.e. Telegram ID and Username "
                                "to be provided to Our Support Service.)",
        "WELCOME_MSG": f"Welcome to {BOT_NAME}-Restaurant!",
        "REG_REQUEST_MSG": lambda
            username,
            user_id,
            text: f"‚ùóÔ∏è Incoming restaurant registration request\n" \
                  f"from @{username} (`{user_id}`):\n" \
                  f"{text}",
        "REG_REQUEST_SENT_MSG": "Your request has been sent to Our Support Service.",
        "LANG_SEL_MENU": "Bot language selection menu.",
        "CHANGE_LANG_MSG": "Select bot language",
        "SEL_LANG_DE_BTN": "üá©üá™ German\n(Deutsch)",
        "SEL_LANG_EN_BTN": "üá∫üá∏ English",
        "SEL_LANG_RU_BTN": "üá∑üá∫ Russian\n(–†—É—Å—Å–∫–∏–π)",
        "LANG_SELECTED_MSG": "Language changed to English!",
        "OPEN_SHIFT_MSG": "Shift is opened, now You can receive orders.",
        "CLOSE_SHIFT_MSG": "Shift is closed.",
        "DISH_AVAILABLE_SELECT_MSG": "Choose item to make it available.",
        "DISH_SET_AVAILABLE_MSG": "Selected item has been set available.",
        "DISH_UNAVAILABLE_SELECT_MSG": "Choose item to make it unavailable.",
        "DISH_SET_UNAVAILABLE_MSG": "Selected item has been set unavailable.",
        "DELETE_DISH_SELECT_MSG": "Select item to delete.",
        "DISH_DELETED_MSG": "Selected item has been deleted.",
        "DISH_ADDED_MSG": lambda dish_name: f"‚úÖ Item: {dish_name} has been added to the Database.",
        "NO_DISH_NAME_MSG": "No item name was provided.",
        "EDIT_DISH_MSG": "Choose a item to edit",
        "GO_BACK_BTN": "‚¨ÖÔ∏è BACK",
        "EDIT_DISH_CHOSEN_MSG": lambda dish_name: f"Item to edit:\n{dish_name}",
        "EDIT_DISH_PARAM_MSG": "Which parameter of the item do You want to change?",
        "EDIT_DESC_BTN": "üìù Description",
        "EDIT_CAT_BTN": "üõç Category",
        "EDIT_PRICE_BTN": "üí∂ Price",
        "EDIT_CATEGORY_MSG": lambda
            dish_uuid: f"Enter new category for the item:\n" \
                       f"Item UUID: {dish_uuid}",
        "CAT_SET_MSG": "‚úÖ New category has been set for the item.",
        "EDIT_DESCRIPTION_MSG": lambda
            dish_uuid: f"Enter new description for the item:\n" \
                       f"Item UUID: {dish_uuid}",
        "DESC_SET_MSG": "‚úÖ New description has been set for the item.",
        "EDIT_PRICE_MSG": lambda
            dish_uuid: f"Enter new price for the item:\n" \
                       f"Item UUID: {dish_uuid}",
        "PRICE_SET_MSG": "‚úÖ New price has been set for the item.",
        "REST_ORDER_ACCEPTED_MSG": lambda order_uuid: f"‚úÖ Accepted order\n`{order_uuid}`",
        "CUST_ORDER_ACCEPTED_MSG": lambda
            order_uuid: f"Order\n`{order_uuid}`\n" \
                        f"Status update:\n" \
                        f"Order received by the restaurant, looking for a courier.",
        "LOOKING_FOR_COURIER_MSG": lambda
            order_uuid,
            courier_fee,
            customer_name,
            customer_username,
            customer_phone,
            comment,
            rest_name,
            dishes,
            rest_address: f"New incoming order:\n`{order_uuid}`\n" \
                          f"Courier pay:\n‚Ç¨`{courier_fee}`\n" \
                          f"Customer's name:\n{customer_name}\n" \
                          f"Customer's Telegram:\n @{customer_username}\n" \
                          f"Customer's phone:\n{customer_phone}\n" \
                          f"Order comments:\n{comment}\n" \
                          f"Restaurant:\n`{rest_name}`\n" \
                          f"Item(s):\n{dishes}\n" \
                          f"Restaurant address:\n`{rest_address}`\n" \
                          f"Restaurant location:",
        "COURIER_DELIVERY_LOC_MSG": "To be delivered here:",
        "COURIER_ACCEPT_ORDER_MSG": "Accept order?",
        "COURIER_ACCEPT_BTN": "‚úÖ Accept",
        "ORDER_READY_MSG": lambda order_uuid: f"Order\n`{order_uuid}`\nis ready and handled to the courier.",
        "COUR_ORDER_IN_DELIVERY_MSG": lambda
            order_uuid: f"Please confirm receiving order\n`{order_uuid}`\n" \
                        f"by pressing button below.",
        "CUST_ORDER_IN_DELIVERY_MSG": lambda
            order_uuid: f"Order\n`{order_uuid}`\n" \
                        f"Status update:\nOrder is ready and handled to the courier.",
        "COUR_ORDER_IN_DELIVERY_BTN": "‚úÖ Order received"
    },
    "ru_RU": {
        "ASK_REGISTRATION_MSG": "–î–∞–Ω–Ω—ã–π –¢–µ–ª–µ–≥—Ä–∞–º –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –∫–∞–∫ –∑–∞–≤–µ–¥–µ–Ω–∏–µ.\n"
                                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–∞–π—Ç–µ –∑–∞—è–≤–∫—É –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ –°–ª—É–∂–±—É –ü–æ–¥–¥–µ—Ä–∂–∫–∏ –ø—É—Ç–µ–º –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n"
                                "(–û—Ç–≤–µ—á–∞—è –Ω–∞ –¥–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –í—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å –Ω–∞ –ø–µ—Ä–µ–¥–∞—á—É –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö —Ç.–µ. –Ω–∏–∫–∞ –∏ ID –¢–µ–ª–µ–≥—Ä–∞–º –ù–∞—à–µ–π –°–ª—É–∂–±–µ –ü–æ–¥–¥–µ—Ä–∂–∫–∏.)",
        "WELCOME_MSG": f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ {BOT_NAME}-Restaurant!",
        "REG_REQUEST_MSG": lambda
            username,
            user_id,
            text: f"‚ùóÔ∏è –í—Ö–æ–¥—è—â–∏–π –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞\n" \
                  f"–æ—Ç @{username} (`{user_id}`):\n" \
                  f"{text}",
        "REG_REQUEST_SENT_MSG": "–í–∞—à –∑–∞–ø—Ä–æ—Å –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ù–∞—à–µ–π –°–ª—É–∂–±–µ –ü–æ–¥–¥–µ—Ä–∂–∫–∏.",
        "LANG_SEL_MENU": "–ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞",
        "CHANGE_LANG_MSG": "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –±–æ—Ç–∞",
        "SEL_LANG_DE_BTN": "üá©üá™ –ù–µ–º–µ—Ü–∫–∏–π\n(Deutsch)",
        "SEL_LANG_EN_BTN": "üá∫üá∏ –ê–Ω–≥–ª–∏–π—Å–∫–∏–π\n(English)",
        "SEL_LANG_RU_BTN": "üá∑üá∫ –†—É—Å—Å–∫–∏–π",
        "LANG_SELECTED_MSG": "–Ø–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ —Ä—É—Å—Å–∫–∏–π!",
        "OPEN_SHIFT_MSG": "–°–º–µ–Ω–∞ –Ω–∞—á–∞—Ç–∞, —Ç–µ–ø–µ—Ä—å –í—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –∑–∞–∫–∞–∑—ã.",
        "CLOSE_SHIFT_MSG": "–°–º–µ–Ω–∞ –∑–∞–∫–æ–Ω—á–µ–Ω–∞.",
        "DISH_AVAILABLE_SELECT_MSG": "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –µ–≥–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º –¥–ª—è –∑–∞–∫–∞–∑–∞.",
        "DISH_SET_AVAILABLE_MSG": "–í—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä —Ç–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –∑–∞–∫–∞–∑–∞.",
        "DISH_UNAVAILABLE_SELECT_MSG": "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –µ–≥–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–º –¥–ª—è –∑–∞–∫–∞–∑–∞.",
        "DISH_SET_UNAVAILABLE_MSG": "–í—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä —Ç–µ–ø–µ—Ä—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –∑–∞–∫–∞–∑–∞.",
        "DELETE_DISH_SELECT_MSG": "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –µ–≥–æ.",
        "DISH_DELETED_MSG": "–í—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä –±—ã–ª —É–¥–∞–ª–µ–Ω.",
        "DISH_ADDED_MSG": lambda dish_name: f"‚úÖ –¢–æ–≤–∞—Ä: {dish_name} –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.",
        "NO_DISH_NAME_MSG": "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.",
        "EDIT_DISH_MSG": "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
        "GO_BACK_BTN": "‚¨ÖÔ∏è –ù–ê–ó–ê–î",
        "EDIT_DISH_CHOSEN_MSG": lambda dish_name: f"–†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–π —Ç–æ–≤–∞—Ä:\n{dish_name}",
        "EDIT_DISH_PARAM_MSG": "–ö–∞–∫–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –í—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?",
        "EDIT_DESC_BTN": "üìù –û–ø–∏—Å–∞–Ω–∏–µ",
        "EDIT_CAT_BTN": "üõç –ö–∞—Ç–µ–≥–æ—Ä–∏—è",
        "EDIT_PRICE_BTN": "üí∂ –¶–µ–Ω–∞",
        "EDIT_CATEGORY_MSG": lambda
            dish_uuid: f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é:\n" \
                       f"UUID —Ç–æ–≤–∞—Ä–∞: {dish_uuid}",
        "CAT_SET_MSG": "‚úÖ –¢–æ–≤–∞—Ä—É –ø—Ä–∏—Å–≤–æ–µ–Ω–∞ –Ω–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è.",
        "EDIT_DESCRIPTION_MSG": lambda
            dish_uuid: f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞:\n" \
                       f"UUID —Ç–æ–≤–∞—Ä–∞: {dish_uuid}",
        "DESC_SET_MSG": "‚úÖ –¢–æ–≤–∞—Ä—É –ø—Ä–∏—Å–≤–æ–µ–Ω–æ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ.",
        "EDIT_PRICE_MSG": lambda
            dish_uuid: f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞:\n" \
                       f"UUID —Ç–æ–≤–∞—Ä–∞: {dish_uuid}",
        "PRICE_SET_MSG": "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è —Ü–µ–Ω–∞ –¥–ª—è —Ç–æ–≤–∞—Ä–∞.",
        "REST_ORDER_ACCEPTED_MSG": lambda order_uuid: f"‚úÖ –ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç\n`{order_uuid}`",
        "CUST_ORDER_ACCEPTED_MSG": lambda
            order_uuid: f"–ó–∞–∫–∞–∑\n`{order_uuid}`\n" \
                        f"–ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å:\n" \
                        f"–ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç –∑–∞–≤–µ–¥–µ–Ω–∏–µ–º, –∏—â–µ–º –∫—É—Ä—å–µ—Ä–∞.",
        "LOOKING_FOR_COURIER_MSG": lambda
            order_uuid,
            courier_fee,
            customer_name,
            customer_username,
            customer_phone,
            comment,
            rest_name,
            dishes,
            rest_address: f"–ù–æ–≤—ã–π –∑–∞–∫–∞–∑:\n`{order_uuid}`\n" \
                          f"–í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –∫—É—Ä—å–µ—Ä–∞:\n‚Ç¨`{courier_fee}`\n" \
                          f"–ò–º—è –ø–æ–∫—É–ø–∞—Ç–µ–ª—è:\n{customer_name}\n" \
                          f"–¢–µ–ª–µ–≥—Ä–∞–º –ø–æ–∫—É–ø–∞—Ç–µ–ª—è:\n @{customer_username}\n" \
                          f"–¢–µ–ª–µ—Ñ–æ–Ω –ø–æ–∫—É–ø–∞—Ç–µ–ª—è:\n{customer_phone}\n" \
                          f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏:\n{comment}\n" \
                          f"–ó–∞–≤–µ–¥–µ–Ω–∏–µ:\n`{rest_name}`\n" \
                          f"–¢–æ–≤–∞—Ä(—ã):\n{dishes}\n" \
                          f"–ê–¥—Ä–µ—Å –∑–∞–≤–µ–¥–µ–Ω–∏—è:\n`{rest_address}`\n" \
                          f"–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è:",
        "COURIER_DELIVERY_LOC_MSG": "–î–æ—Å—Ç–∞–≤–∏—Ç—å —Å—é–¥–∞:",
        "COURIER_ACCEPT_ORDER_MSG": "–ü—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑?",
        "COURIER_ACCEPT_BTN": "‚úÖ –ü—Ä–∏–Ω—è—Ç—å",
        "ORDER_READY_MSG": lambda order_uuid: f"–ó–∞–∫–∞–∑\n`{order_uuid}`\n–≥–æ—Ç–æ–≤ –∏ –ø–µ—Ä–µ–¥–∞–Ω –∫—É—Ä—å–µ—Ä—É.",
        "COUR_ORDER_IN_DELIVERY_MSG": lambda
            order_uuid: f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞\n`{order_uuid}`\n" \
                        f"–Ω–∞–∂–∞—Ç–∏–µ–º –∫–Ω–æ–ø–∫–∏.",
        "CUST_ORDER_IN_DELIVERY_MSG": lambda
            order_uuid: f"–ó–∞–∫–∞–∑\n`{order_uuid}`\n" \
                        f"–ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å:\n–ó–∞–∫–∞–∑ –≥–æ—Ç–æ–≤ –∏ –ø–µ—Ä–µ–¥–∞–Ω –≤ –¥–æ—Å—Ç–∞–≤–∫—É.",
        "COUR_ORDER_IN_DELIVERY_BTN": "‚úÖ –ó–∞–∫–∞–∑ –ø–æ–ª—É—á–µ–Ω"
    }
}
